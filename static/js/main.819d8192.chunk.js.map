{"version":3,"sources":["utils/api.js","components/search/index.jsx","components/current/index.jsx","components/forecast/index.jsx","App.js","index.js"],"names":["geoAPIOptions","method","headers","X-RapidAPI-Key","X-RapidAPI-Host","OPEN_WEATHER_API_URL","OPEN_WEATHER_API_KEY","Search","_ref","onSearchChange","_useState","useState","_useState2","Object","slicedToArray","search","setSearch","react_default","a","createElement","className","es","placeholder","debounceTimeout","value","onChange","searchData","loadOptions","inputValue","fetch","concat","then","response","json","options","data","map","city","latitude","longitude","label","name","countryCode","catch","err","console","log","CurrentWeather","today","Date","getDay","sys","country","coord","lon","toFixed","lat","main","temp","weather","description","alt","src","icon","humidity","feels_like","wind","speed","WEEK_DAYS","ForecastWeather","DayInWeek","forecastDays","slice","length","Fragment","list","splice","item","idx","dist_es","allowZeroExpanded","key","temp_min","temp_max","pressure","clouds","all","sea_level","_regeneratorRuntime","exports","Op","prototype","hasOwn","hasOwnProperty","$Symbol","Symbol","iteratorSymbol","iterator","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","define","obj","defineProperty","enumerable","configurable","writable","wrap","innerFn","outerFn","self","tryLocsList","protoGenerator","Generator","generator","create","context","Context","_invoke","state","arg","Error","doneResult","delegate","delegateResult","maybeInvokeDelegate","ContinueSentinel","sent","_sent","dispatchException","abrupt","record","tryCatch","type","done","fn","call","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","this","getProto","getPrototypeOf","NativeIteratorPrototype","values","Gp","defineIteratorMethods","forEach","AsyncIterator","PromiseImpl","previousPromise","callInvokeWithMethodAndArg","resolve","reject","invoke","result","__await","unwrapped","error","undefined","return","TypeError","info","resultName","next","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","iterable","iteratorMethod","isNaN","i","displayName","isGeneratorFunction","genFun","ctor","constructor","mark","setPrototypeOf","__proto__","awrap","async","Promise","iter","keys","object","reverse","pop","skipTempReset","prev","charAt","stop","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","thrown","delegateYield","App","currentWeather","setCurrentWeather","_useState3","_useState4","forecastWeather","setForecastWeather","components_search","_searchData$value$spl","split","_searchData$value$spl2","currentWeatherFetcher","forecastWeatherFetcher","asyncToGenerator","_callee","weatherResponse","forecastResponse","_context","objectSpread","_x","apply","arguments","components_current","components_forecast","ReactDOM","createRoot","document","getElementById","render","StrictMode","src_App"],"mappings":"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","file":"static/js/main.819d8192.chunk.js","sourcesContent":["export const geoAPIOptions = {\r\n  method: \"GET\",\r\n  //url: 'https://wft-geo-db.p.rapidapi.com/v1/geo/adminDivisions',\r\n  headers: {\r\n    \"X-RapidAPI-Key\": \"1430c8b09dmsh694441d0fc9c3f5p1033f9jsn6ad61662889a\",\r\n    \"X-RapidAPI-Host\": \"wft-geo-db.p.rapidapi.com\",\r\n  },\r\n};\r\n\r\nexport const GEO_API_URL = \"https://wft-geo-db.p.rapidapi.com/v1/geo\";\r\nexport const OPEN_WEATHER_API_URL = \"https://api.openweathermap.org/data/2.5\";\r\nexport const OPEN_WEATHER_API_KEY = \"03ac7d4d2ad8038c05e7927181dbbb86\";\r\n","import React, { useState } from \"react\";\r\nimport { AsyncPaginate } from \"react-select-async-paginate\";\r\nimport { GEO_API_URL, geoAPIOptions } from \"../../utils/api\";\r\n\r\nconst Search = ({ onSearchChange }) => {\r\n  const [search, setSearch] = useState(null);\r\n\r\n  const loadOptions = (inputValue) => {\r\n    return fetch(\r\n      `${GEO_API_URL}/cities?namePrefix=${inputValue}`,\r\n      geoAPIOptions\r\n    )\r\n      .then((response) => response.json())\r\n      .then((response) => {\r\n        return {\r\n          options: response.data.map((city) => {\r\n            return {\r\n              value: `${city.latitude} ${city.longitude}`,\r\n              label: `${city.name} ${city.countryCode}`,\r\n            };\r\n          }),\r\n        };\r\n      })\r\n      .catch((err) => console.log(err));\r\n  };\r\n\r\n  const handleOnChange = (searchData) => {\r\n    setSearch(searchData);\r\n    onSearchChange(searchData);\r\n  };\r\n  return (\r\n    <div className=\"pushdown\">\r\n      <AsyncPaginate\r\n        placeholder=\"Seach by city\"\r\n        debounceTimeout={600}\r\n        value={search}\r\n        onChange={handleOnChange}\r\n        loadOptions={loadOptions}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Search;\r\n","import React from \"react\";\r\nimport \"./index.css\";\r\n\r\nconst CurrentWeather = ({ data }) => {\r\n  const weekday = [\r\n    \"Sunday\",\r\n    \"Monday\",\r\n    \"Tuesday\",\r\n    \"Wednesday\",\r\n    \"Thursday\",\r\n    \"Friday\",\r\n    \"Saturday\",\r\n  ];\r\n  const day = new Date();\r\n  let today = weekday[day.getDay()];\r\n\r\n  return (\r\n    <div className=\"curent-weather-caption\">\r\n      <div className=\"widget-top\">\r\n        <div className=\"location\">\r\n          {data.name ? (\r\n            <p className=\"bold\">\r\n              {data.name}, {data.sys.country}\r\n            </p>\r\n          ) : null}\r\n          <p className=\"coordinates\">\r\n            {data.coord ? data.coord.lon.toFixed() : null}°/\r\n            {data.coord ? data.coord.lat.toFixed() : null}°\r\n          </p>\r\n          <div className=\"temp\">\r\n            {data.main ? <h3>{data.main.temp.toFixed()}°C</h3> : null}\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"description\">\r\n          {data.weather ? (\r\n            <p className=\"flexit\">\r\n              {data.weather[0].description}{\" \"}\r\n              <img\r\n                alt=\"weather-icon\"\r\n                className=\"weather-icon\"\r\n                src={`icons/${data.weather[0].icon}.png`}\r\n              />\r\n            </p>\r\n          ) : null}\r\n          <h4>{today}</h4>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"widget-bottom\">\r\n        <div className=\"humidity\">\r\n          <p className=\"thin\">Humidity</p>\r\n          {data.main ? (\r\n            <p className=\"thin\">\r\n              <span>{data.main.humidity}% </span>\r\n            </p>\r\n          ) : null}\r\n        </div>\r\n\r\n        <div className=\"feels\">\r\n          <p className=\"thin\">Feels Like</p>\r\n          {data.main ? (\r\n            <p className=\"thin\">{data.main.feels_like.toFixed()}°C</p>\r\n          ) : null}\r\n        </div>\r\n\r\n        <div className=\"feels\">\r\n          <p className=\"thin\">Wind Speed</p>\r\n          {data.main ? (\r\n            <p className=\"thin\">{data.wind.speed.toFixed()}MPH</p>\r\n          ) : null}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CurrentWeather;\r\n","import React from \"react\";\r\nimport \"./index.css\";\r\nimport {\r\n  Accordion,\r\n  AccordionItem,\r\n  AccordionItemPanel,\r\n  AccordionItemHeading,\r\n  AccordionItemButton,\r\n} from \"react-accessible-accordion\";\r\nconst WEEK_DAYS = [\r\n  \"Monday\",\r\n  \"Tuesday\",\r\n  \"Wednesday\",\r\n  \"Thursday\",\r\n  \"Friday\",\r\n  \"Saturday\",\r\n  \"Sunday\",\r\n];\r\n\r\nconst ForecastWeather = ({ data }) => {\r\n  const DayInWeek = new Date().getDay();\r\n  //console.log(DayInWeek);\r\n  const forecastDays = WEEK_DAYS.slice(DayInWeek, WEEK_DAYS.length).concat(\r\n    WEEK_DAYS.slice(0, DayInWeek)\r\n  );\r\n  return (\r\n    <>\r\n      <label className=\"title\">\r\n        Next 7 days forecast. Min/Max temperatures responses are erroneous from\r\n        the API.\r\n      </label>\r\n      {data.list.splice(0, 7).map((item, idx) => (\r\n        <Accordion allowZeroExpanded>\r\n          <AccordionItem key={idx}>\r\n            <AccordionItemHeading>\r\n              <AccordionItemButton>\r\n                <div className=\"daily-items\">\r\n                  <img\r\n                    alt=\"weather-forecast\"\r\n                    className=\"small-icon\"\r\n                    src={`icons/${item.weather[0].icon}.png`}\r\n                  />\r\n                  <label className=\"day\">{forecastDays[idx]}</label>\r\n\r\n                  <label className=\"description\">\r\n                    {item.weather[0].description}\r\n                  </label>\r\n                  <label className=\"min-max\">\r\n                    {item.main.temp_min.toFixed()}°C /{\" \"}\r\n                    {item.main.temp_max.toFixed()}°C\r\n                  </label>\r\n                </div>\r\n              </AccordionItemButton>\r\n            </AccordionItemHeading>\r\n            <AccordionItemPanel>\r\n              <div className=\"details-grid\">\r\n                <div className=\"items-grid\">\r\n                  <label>Pressure</label>\r\n                  <label>{item.main.pressure}kPa</label>\r\n                </div>\r\n                <div className=\"items-grid\">\r\n                  <label>Humidity</label>\r\n                  <label>{item.main.humidity}%</label>\r\n                </div>\r\n                <div className=\"items-grid\">\r\n                  <label>Clouds</label>\r\n                  <label>{item.clouds.all}%</label>\r\n                </div>\r\n                <div className=\"items-grid\">\r\n                  <label>Wind Speed</label>\r\n                  <label>{item.wind.speed}m/s</label>\r\n                </div>\r\n                <div className=\"items-grid\">\r\n                  <label>Sea Level</label>\r\n                  <label>{item.main.sea_level} m</label>\r\n                </div>\r\n                <div className=\"items-grid\">\r\n                  <label>Feels Like:</label>\r\n                  <label>{item.main.feels_like.toFixed()}</label>\r\n                </div>\r\n              </div>\r\n            </AccordionItemPanel>\r\n          </AccordionItem>\r\n        </Accordion>\r\n      ))}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ForecastWeather;\r\n","import React, { useState } from \"react\";\nimport Search from \"./components/search\";\nimport CurrentWeather from \"./components/current\";\nimport ForecastWeather from \"./components/forecast\";\nimport { OPEN_WEATHER_API_URL, OPEN_WEATHER_API_KEY } from \"./utils/api\";\n\nfunction App() {\n  //create hooks to fetch\n  const [currentWeather, setCurrentWeather] = useState(null);\n  const [forecastWeather, setForecastWeather] = useState(null);\n\n  const handleOnSearchChange = (searchData) => {\n    const [lat, lon] = searchData.value.split(\" \");\n    const currentWeatherFetcher = fetch(\n      `${OPEN_WEATHER_API_URL}/weather?lat=${lat}&lon=${lon}&appid=${OPEN_WEATHER_API_KEY}&units=metric`\n    );\n\n    const forecastWeatherFetcher = fetch(\n      `${OPEN_WEATHER_API_URL}/forecast?lat=${lat}&lon=${lon}&appid=${OPEN_WEATHER_API_KEY}&units=metric`\n    );\n\n    Promise.all([currentWeatherFetcher, forecastWeatherFetcher])\n      .then(async (response) => {\n        const weatherResponse = await response[0].json();\n        const forecastResponse = await response[1].json();\n        setCurrentWeather({ city: searchData.label, ...weatherResponse });\n        setForecastWeather({ city: searchData.label, ...forecastResponse });\n      })\n      .catch((err) => console.log(err));\n  };\n  console.log(currentWeather);\n  console.log(forecastWeather);\n  return (\n    <div className=\"app\">\n      <div className=\"container\">\n        <Search onSearchChange={handleOnSearchChange} />\n        {currentWeather && <CurrentWeather data={currentWeather} />}\n        {forecastWeather && <ForecastWeather data={forecastWeather} />}\n      </div>\n    </div>\n  );\n}\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom/client\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nconst root = ReactDOM.createRoot(document.getElementById(\"root\"));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n"],"sourceRoot":""}